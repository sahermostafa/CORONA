{"version":3,"sources":["components/Cards.module.css","App.module.css","components/CountryPicker.module.css","components/Chart.module.css","api/index.js","components/Countrypicker.js","components/Cards.js","components/Chart.js","images/image.png","App.js","index.js"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifie","map","daily","total","date","reportDate","fetchCountries","countries","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchAPI","FormControl","className","styles","formControl","NativeSelect","defaultValue","onChange","e","target","value","i","Cards","container","Grid","spacing","justifyContent","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Chart","dailyData","setDailyData","fetchMyAPI","initialDailyData","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","App","state","setState","this","image","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c7ab834.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2f_Wx\",\"card\":\"Cards_card__2KCAI\",\"infected\":\"Cards_infected__1tKNE\",\"recovered\":\"Cards_recovered__1VUjV\",\"deaths\":\"Cards_deaths__1ZPUs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3aL2x\",\"image\":\"App_image__3wmRl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2JUZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1RfUQ\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  \n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\n// export const fetchDailyData = async () => {\n//   try {\n//     const { data } = await axios.get(`${url}/daily`);\n\n//     return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n//   } catch (error) {\n//     return error;\n//   }\n// };\n\n// Instead of Global, it fetches the daily data for the US\nexport const fetchDailyData = async () => {\n    try {\n      const { data } = await axios.get(`${url}/daily`);\n      const modifie = data.map((daily) => ({\n        confirmed:daily.confirmed.total , recovered:daily.recovered.total, deaths:daily.deaths.total , date:daily.reportDate,\n      }))\n  \n      return modifie;\n    } catch (error) {\n      return error;\n    }\n  };\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../api/index';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Globel</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport cx from 'classnames';\nimport { Typography, Grid, Card ,CardContent} from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup'\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justifyContent=\"center\">\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom >Infected</Typography>\n            <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" /></Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of infected from COVID-19.</Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card}  xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n          <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom >Recovered</Typography>\n          <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value-deaths.value} duration={2.5} separator=\",\" /></Typography>\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n          <Typography variant=\"body2\">Number of recoveries from COVID-19.</Typography>\n            \n          </CardContent>\n        </Grid>\n        <Grid item component={Card}  xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom >Deaths</Typography>\n            <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" /></Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">Number of deaths from COVID-19.</Typography>\n          </CardContent>\n         </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../api/index';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, confirmed.value-deaths.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData.length ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },  {\n            data: dailyData.map(({confirmed,deaths}) =>  confirmed-deaths),\n            label: 'Recovered',\n            borderColor: 'green',\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\nimport   CountryPicker from './components/Countrypicker';\nimport  Cards  from  './components/Cards';\nimport Chart from './components/Chart';\nimport { fetchData } from './api/index';\nimport styles from './App.module.css';\nimport image from './images/image.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart  data={data} country={country} />\n         \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport APP from './App';\n\nReactDOM.render(\n    <APP />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}